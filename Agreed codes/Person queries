Person by gender:

select gengen.name as 'person gender', count (distinct(p.id))
from researchdata_person p
left join researchdata_slgeneric gengen on p.gender_id = gengen.id
group by gender_id;

Person by religion:

select genrel.name as 'person religion', count (*)
from researchdata_person p
LEFT JOIN researchdata_person_religion prel ON p.id = prel.person_id
LEFT JOIN researchdata_slgeneric genrel ON prel.slpersonreligion_id = genrel.id
group by genrel.id;

Person by rank:

select genrank.name as 'person rank', count (*)
from researchdata_person p
LEFT JOIN researchdata_person_rank prank ON p.id = prank.person_id
LEFT JOIN researchdata_slgeneric genrank ON prank.slpersonrank_id = genrank.id
group by genrank.id;

Persons with more than one rank:

select p.id, p.first_name, p.last_name, count(*) as 'count ranks', group_concat(genrank.name) as 'ranks'
from researchdata_person p
LEFT JOIN researchdata_person_rank prank ON p.id = prank.person_id
LEFT JOIN researchdata_slgeneric genrank ON prank.slpersonrank_id = genrank.id
where genrank.name is not null
group by p.id
having count(*) > 1
order by last_name;

Age at death for authors:

select distinct p.id, first_name, last_name, year_of_birth, year_of_death, (year_of_death - year_of_birth) as "age at death"
from researchdata_person p
left join researchdata_letterperson lp on p.id = lp.person_id 
where lp.person_letter_relationship_id is 278
and p.year_of_birth is not not null and p.year_of_death is not null
order by "age at death" desc;

To find duplicate persons of the same name:

select first_name, last_name, count(*)
from researchdata_person p
LEFT JOIN researchdata_person_rank prank ON p.id = prank.person_id
LEFT JOIN researchdata_slgeneric genrank ON prank.slpersonrank_id = genrank.id
group by p.first_name, p.last_name
having count(*) > 1
order by last_name;

 
