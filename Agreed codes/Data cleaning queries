2 = Karen
3 = Sarah
4 = Emily

[we can also limit our searches with 'where created_by_id = 2']

-- To count letters by creator:
select count(*)
from researchdata_letter l
where l.created_by_id is 2

--To find letters with no date and record creator:

select id, title, sent_date_year, created_by_id
from researchdata_letter l
where sent_date_year is NULL
order by created_by_id

-- To find persons with no gender and record creator:

select id, first_name, last_name, gender_id, created_by_id 
from researchdata_person p
where gender_id is NULL 
order by created_by_id

-- To find persons other with no gender and record creator:

(Counts only)

select count(*)
from researchdata_letterperson lp
left join researchdata_slgeneric genothergen on lp.person_other_gender_id = genothergen.id
where person_other_gender_id is null and person_other is not null; 

(Lists the records)

select lp.id, lp.person_other, lp.person_other_gender_id, created_by_id 
from researchdata_letterperson lp
left join researchdata_slgeneric genothergen on lp.person_other_gender_id = genothergen.id
where person_other_gender_id is null and person_other is not null; 

-- To find letter persons with no relationship to letter and record creator:

SELECT id, person_id, person_form_of_address, person_other, person_letter_relationship_id, created_by_id 
from researchdata_letterperson lp 
where person_letter_relationship_id is NULL
order by created_by_id

-- To find missing sent from locations:

select id, title, sent_from_location, created_by_id 
from researchdata_letter l
-- sort column sent_from_location and if asked to filter cleck the empty (ie. no data) box 

-- To find missing sent to locations:

select id, title, sent_to_location, created_by_id 
from researchdata_letter l
-- sort column sent_from_location and if asked to filter cleck the empty (ie. no data) box 

-- To find sent from locations not containing country:

Will probably need '%' signs, e.g.

select id, title, sent_to_location , created_by_id 
from researchdata_letter l
where sent_to_location not like "%England%"; 

select id, title, sent_from_location, created_by_id 
from researchdata_letter l
where sent_from_location not like "England"
-- can repeat with "Wales", "scotland", "ireland"

-- To find sent to locations not containing country:

select id, title, sent_to_location , created_by_id 
from researchdata_letter l
where sent_to_location not like "England"
-- can repeat with "Wales", "scotland", "ireland"

-- To identify other persons who could be 'upgraded' to persons:

select lp.id, lp.person_other, lp.person_other_gender_id, created_by_id 
from researchdata_letterperson lp
where lp.person_id is null
order by created_by_id
-- sort column created_by_id to check your own id, then scan manually for repetitions [create 'person' record if several] and check names against the people to ensure no 'other persons' have 'person' records

--To identify persons where marital status is NULL
select p.id, gen.name, p.first_name, p.last_name, created_by_id 
from researchdata_person p 
left join researchdata_person_marital_status pmstat on p.id = pmstat.person_id 
left join researchdata_slgeneric gen on pmstat.slpersonmaritalstatus_id = gen.id 
where gen.name is NULL and created_by_id = '3'

-- To identify persons where religion is NULL
select p.id, first_name, last_name, created_by_id 
from researchdata_person p
LEFT JOIN researchdata_person_religion prel ON p.id = prel.person_id
LEFT JOIN researchdata_slgeneric genrel ON prel.slpersonreligion_id = genrel.id
where genrel.id is NULL and created_by_id = '2';


--To find a particular personâ€™s active dates: [SF]
select distinct l.sent_date_year 
from researchdata_letter l 
left join researchdata_letterperson lp on l.id = lp.letter_id 
left join researchdata_person rp on lp.person_id = rp.id
where rp.first_name is "John" and rp.last_name is "Allen"
order by l.sent_date_year ASC;

--To find a particular person's active dates by Person ID (useful where we have two Persons with the same name): [SF]
select distinct rp.first_name, rp.last_name, l.sent_date_year 
from researchdata_letter l 
left join researchdata_letterperson lp on l.id = lp.letter_id 
left join researchdata_person rp on lp.person_id = rp.id
where rp.id is "681"
order by l.sent_date_year ASC;

--To find a list of persons for each letter collection:[SF]
select distinct rp.id, rp.first_name, rp.last_name, rs.name 
from researchdata_letter l 
left join researchdata_letterperson lp on l.id = lp.letter_id 
left join researchdata_person rp on lp.person_id = rp.id
left join researchdata_slgeneric rs on l.collection_id = rs.id 
where rs.name like "%Mercer%"
order by rp.id asc;

--To find a list of person with no birth and death dates (over 200), also to find a list of persons with no birth/death dates AND no active start/end dates (66): [SF]
select rp.id, rp.first_name, rp.last_name, rp.year_of_birth, rp.year_of_death, rp.year_active_start, rp.year_active_end  
from researchdata_person rp 
where rp.year_of_birth is NULL
and rp.year_of_death is NULL
and rp.year_active_start is NULL 
and rp.year_active_end is NULL;
