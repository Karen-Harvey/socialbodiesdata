Aggregate functions

Total number of letters:
select count (*)
from researchdata_letter l

Count and group by year sent:
select sent_date_year, count (*) 
from researchdata_letter l
group by sent_date_year 
--order by count(*) desc  

Count place by country:
QQ - can we group by country??
[England]
select count (*)
from researchdata_letter l
where sent_from_location like '%england%'

[those not England]
select sent_from_location 
from researchdata_letter l
where sent_from_location not like '%england%'

[France]
select count (*)
from researchdata_letter l
where sent_from_location like '%france%'

How many of our letterperson records do not have a person record and vice versa?
Count persons V letterpersons 
select count (*)
from researchdata_letterperson lp
--where lp.person_id is null
--where lp.person_id is not null

Count and group by gender:
How many of our persons are male and female?
[Persons]
select gengen.name as 'person gender', count (*)
from researchdata_person p
left join researchdata_slgeneric gengen on p.gender_id = gengen.id
group by gender_id

QQ - How many of all letterpersons are male and female? [we need to do two separate calculations, I think??]
Count letterperson records who have a person record by gender (excluding those that do not have a gender):
select gengen.name as "gender", count (*)
from researchdata_letterperson lp
LEFT JOIN researchdata_person p ON lp.person_id = p.id
left join researchdata_slgeneric gengen on p.gender_id = gengen.id
where p.gender_id is not null
group by p.gender_id;

How many of our letterpersons (without a person id) are male and female? 
[Letter persons other]
select genothergen.name as 'other gender', count (*)
from researchdata_letterperson lp 
left join researchdata_slgeneric genothergen on lp.person_other_gender_id = genothergen.id 
where lp.person_id is null
group by person_other_gender_id

QQ - is there a way of removing duplicates from the query above on non-person gender??

How many persons are there of each rank?
Count and group by rank: [only persons]
[all]
select genrank.name as 'person rank', count (*)
from researchdata_person p
LEFT JOIN researchdata_person_rank prank ON p.id = prank.person_id
LEFT JOIN researchdata_slgeneric genrank ON prank.slpersonrank_id = genrank.id
group by genrank.id;

How many persons of each gender are there in each rank?
[all by gender]
select genrank.name as 'person rank', gengen.name as "gender", count (*)
from researchdata_person p
LEFT JOIN researchdata_person_rank prank ON p.id = prank.person_id
LEFT JOIN researchdata_slgeneric genrank ON prank.slpersonrank_id = genrank.id
left join researchdata_slgeneric gengen on p.gender_id = gengen.id
where gengen.id is not null
group by genrank.id, p.gender_id

[men]
select genrank.name as 'person rank', count (*)
from researchdata_person p
LEFT JOIN researchdata_person_rank prank ON p.id = prank.person_id
LEFT JOIN researchdata_slgeneric genrank ON prank.slpersonrank_id = genrank.id
where p.gender_id is 1
group by genrank.id;

[women]
select genrank.name as 'person rank', count (*)
from researchdata_person p
LEFT JOIN researchdata_person_rank prank ON p.id = prank.person_id
LEFT JOIN researchdata_slgeneric genrank ON prank.slpersonrank_id = genrank.id
where p.gender_id is 2
group by genrank.id;

How many persons are there of each religion?
Count and group by religion:
[all persons]
select genrel.name as 'person religion', count (*)
from researchdata_person p
LEFT JOIN researchdata_person_religion prel ON p.id = prel.person_id
LEFT JOIN researchdata_slgeneric genrel ON prel.slpersonreligion_id = genrel.id
group by genrel.id;

How many persons of each gender are there in each religion?
[all persons & gender]
select genrel.name as 'person religion', gengen.name as "gender", count (*)
from researchdata_person p
LEFT JOIN researchdata_person_religion prel ON p.id = prel.person_id
LEFT JOIN researchdata_slgeneric genrel ON prel.slpersonreligion_id = genrel.id
left join researchdata_slgeneric gengen on p.gender_id = gengen.id
--where p.gender_id is not null
group by genrel.id, p.gender_id;

What are the relationships to letters of the letterpersons?
Count letterperson by relationship to letter:
select genrel.name as 'relationship to letter', count (*)
from researchdata_letterperson lp
left join researchdata_slgeneric genrel on lp.person_letter_relationship_id = genrel.id
group by genrel.id

Count other person relationships to letter by gender:
[men]
select genrel.name as 'relationship to letter', count (*) as "number of men"
from researchdata_letterperson lp
left join researchdata_slgeneric genrel on lp.person_letter_relationship_id = genrel.id
where lp.person_other_gender_id is 376
group by genrel.id

[women]
select genrel.name as 'relationship to letter', count (*) as "number of women"
from researchdata_letterperson lp
left join researchdata_slgeneric genrel on lp.person_letter_relationship_id = genrel.id
where lp.person_other_gender_id is 377
group by genrel.id

[men and women]
select genlpothergen.name as 'lp other gender', genrel.name as 'relationship to letter', count (*) as "number"
from researchdata_letterperson lp
left join researchdata_slgeneric genrel on lp.person_letter_relationship_id = genrel.id
left join researchdata_slgeneric genlpothergen on lp.person_other_gender_id = genlpothergen.id
where lp.person_other_gender_id is 376 or 377
--where lp.person_other_gender_id is not null
group by genrel.id, lp.person_other_gender_id

To get all results on letterperson gender/relationship to letter we also need to ask about the letterperson with person.id: 
Count letterperson person by relationship to letter and gender:
select genpgen.name as 'person gender', genrel.name as 'relationship to letter', count (*) as "number"
from researchdata_letterperson lp
left join researchdata_person p on lp.person_id = p.id 
left join researchdata_slgeneric genrel on lp.person_letter_relationship_id = genrel.id
left join researchdata_slgeneric genpgen on p.gender_id = genpgen.id
--where p.gender_id is 1 or 2
where p.gender_id is not null
group by genrel.id, p.gender_id

Count and group named categories:
[body part]
select genbp.name as 'body part name', count (*)
from researchdata_letterperson_body_part lpbp
left join researchdata_slgeneric genbp on lpbp.slletterpersonbodypart_id = genbp.id
group by slletterpersonbodypart_id

[emotion]
[all letter persons count]
select genem.name as 'emotion', count (*)
from researchdata_letterperson_emotion lpem
left join researchdata_slgeneric genem on lpem.slletterpersonemotion_id = genem.id
group by slletterpersonemotion_id
order by count (*) desc

Emotion by person gender:
QQ - can we build percentages into the SQL queries??

QQ - can we group male and female as separate 'series' within Excel for making charts

[all letterpersons with person records and an assigned gender count]
select genem.name as 'emotion', count (*)
from researchdata_letterperson_emotion lpem
LEFT JOIN researchdata_letterperson lp ON lpem.letterperson_id = lp.id
LEFT JOIN researchdata_person p ON lp.person_id = p.id
left join researchdata_slgeneric genem on lpem.slletterpersonemotion_id = genem.id
where lp.person_other_gender_id is null and p.gender_id is not null
group by slletterpersonemotion_id
order by count (*) desc; 

[all letterpersons with person records and an assigned gender count by gender]
select genem.name as 'emotion', gengen.name as "gender", count (*)
from researchdata_letterperson_emotion lpem
LEFT JOIN researchdata_letterperson lp ON lpem.letterperson_id = lp.id
LEFT JOIN researchdata_person p ON lp.person_id = p.id
left join researchdata_slgeneric genem on lpem.slletterpersonemotion_id = genem.id
left join researchdata_slgeneric gengen on p.gender_id = gengen.id
where lp.person_other_gender_id is null and p.gender_id is not null
group by slletterpersonemotion_id, p.gender_id;

[men - all records]
select lp.id, lp.letter_id, p.first_name, p.last_name, genem.name as "emotion"
from researchdata_letterperson lp
LEFT JOIN researchdata_letter l ON lp.letter_id = l.id
LEFT JOIN researchdata_person p ON lp.person_id = p.id
LEFT JOIN researchdata_letterperson_emotion lpem ON lp.id = lpem.letterperson_id
LEFT JOIN researchdata_slgeneric genem ON lpem.slletterpersonemotion_id = genem.id 
where p.gender_id is 1

[men - count]
select genem.name as 'emotion', count (*)
from researchdata_letterperson_emotion lpem
LEFT JOIN researchdata_letterperson lp ON lpem.letterperson_id = lp.id
LEFT JOIN researchdata_person p ON lp.person_id = p.id
left join researchdata_slgeneric genem on lpem.slletterpersonemotion_id = genem.id
where p.gender_id is 1
group by slletterpersonemotion_id
order by count (*) desc

[women - all records]
select lp.id, lp.letter_id, p.first_name, p.last_name, genem.name as "emotion"
from researchdata_letterperson lp
LEFT JOIN researchdata_letter l ON lp.letter_id = l.id
LEFT JOIN researchdata_person p ON lp.person_id = p.id
LEFT JOIN researchdata_letterperson_emotion lpem ON lp.id = lpem.letterperson_id
LEFT JOIN researchdata_slgeneric genem ON lpem.slletterpersonemotion_id = genem.id 
where p.gender_id is 2
group by slletterpersonemotion_id
order by count (*) desc

[women - count]
select genem.name as 'emotion', count (*)
from researchdata_letterperson_emotion lpem
LEFT JOIN researchdata_letterperson lp ON lpem.letterperson_id = lp.id
LEFT JOIN researchdata_person p ON lp.person_id = p.id
left join researchdata_slgeneric genem on lpem.slletterpersonemotion_id = genem.id
where p.gender_id is 2
group by slletterpersonemotion_id
order by count (*) desc

Count all letterperson as persons by emotion, gender and rank:
select genrank.name as 'person rank', gengen.name as "gender", genem.name as 'emotion', count (*)
from researchdata_letterperson_emotion lpem
LEFT JOIN researchdata_letterperson lp ON lpem.letterperson_id = lp.id
LEFT JOIN researchdata_person p ON lp.person_id = p.id
left join researchdata_slgeneric genem on lpem.slletterpersonemotion_id = genem.id
left join researchdata_slgeneric gengen on p.gender_id = gengen.id
LEFT JOIN researchdata_person_rank prank ON p.id = prank.person_id
LEFT JOIN researchdata_slgeneric genrank ON prank.slpersonrank_id = genrank.id
where lp.person_other_gender_id is null and p.gender_id is not null and prank.person_id is not null
group by slletterpersonemotion_id, p.gender_id, genrank.id;

Emotion for other letter person (not persons) by gender:
select genem.name as 'emotion', genothergen.name as "(other) gender", count (*)
from researchdata_letterperson_emotion lpem
LEFT JOIN researchdata_letterperson lp ON lpem.letterperson_id = lp.id
left join researchdata_slgeneric genem on lpem.slletterpersonemotion_id = genem.id
left join researchdata_slgeneric genothergen on lp.person_other_gender_id = genothergen.id
where lp.person_other_gender_id is not null
group by slletterpersonemotion_id, genothergen.id;

Emotion by decade:
select slletterpersonemotion.name, SUBSTRING(l.sent_date_year, 0, 4) || "0s" as "decades", count (*)
from researchdata_letterperson lp
LEFT JOIN researchdata_letterperson_emotion letterperson_emotion ON lp.id = letterperson_emotion.letterperson_id
LEFT JOIN researchdata_slgeneric slletterpersonemotion ON letterperson_emotion.slletterpersonemotion_id = slletterpersonemotion.id
LEFT JOIN researchdata_letter l ON lp.letter_id = l.id 
where slletterpersonemotion.name = 'worried'
group by "decades"

Count and group by, using 'having' to limit on the aggregate:
select sent_date_year, count (*) 
from researchdata_letter l
group by sent_date_year 
having count (*) > 20
order by count(*) desc  

select sent_date_year, count (*) 
from researchdata_letter l
group by sent_date_year 
having count (*) < 5
order by count(*) asc
